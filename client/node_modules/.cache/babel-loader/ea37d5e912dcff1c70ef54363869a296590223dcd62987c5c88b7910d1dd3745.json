{"ast":null,"code":"var _jsxFileName = \"/Users/mel/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/Table/table.js\",\n  _s = $RefreshSig$();\nimport './table.css';\nimport Search from '../search/search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table() {\n  _s();\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      const result = await axios('/data');\n      setData(result.data);\n    }\n    fetchData();\n  }, []);\n\n  // Filter the data based on the query string\n  const filteredData = data.filter(row => {\n    const date = new Date(row.date); // Assuming the date is stored as a string in ISO format\n    const queryDate = new Date(query);\n\n    // Check for a match against the date column or time column\n    return date.toDateString() === queryDate.toDateString() || date.toLocaleTimeString().includes(query);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Technician Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pressure Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pass/Fail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"gVP2AkICvfumelkruAKKwuQ2yZw=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Search","Table","data","setData","useState","query","setQuery","useEffect","fetchData","result","axios","filteredData","filter","row","date","Date","queryDate","toDateString","toLocaleTimeString","includes","map","id","name","email"],"sources":["/Users/mel/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/Table/table.js"],"sourcesContent":["import './table.css';\nimport Search from '../search/search';\n\nfunction Table() {\n\n\n    const [data, setData] = useState([]);\n    const [query, setQuery] = useState('');\n\n    useEffect(() => {\n        async function fetchData() {\n            const result = await axios('/data');\n            setData(result.data);\n        }\n        fetchData();\n    }, []);\n\n  // Filter the data based on the query string\n    const filteredData = data.filter((row) => {\n    const date = new Date(row.date); // Assuming the date is stored as a string in ISO format\n    const queryDate = new Date(query);\n\n    // Check for a match against the date column or time column\n    return date.toDateString() === queryDate.toDateString() || date.toLocaleTimeString().includes(query);\n  });\n\n\n    return (\n\n        <div>\n            \n            <Search />\n            <table>\n            <thead>\n                <tr>\n                    <th>Date</th>\n                    <th>Time</th>\n                    <th>Technician Name</th>\n                    <th>Pressure Value</th>\n                    <th>Pass/Fail</th>\n                </tr>\n            </thead>\n            <tbody>\n                {filteredData.map((row) => (\n                    <tr key={row.id}>\n                        <td>{row.id}</td>\n                        <td>{row.name}</td>\n                        <td>{row.email}</td>\n                        <td>{row.date}</td>\n                    </tr>\n                ))}\n            </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,MAAM,MAAM,kBAAkB;AAAC;AAEtC,SAASC,KAAK,GAAG;EAAA;EAGb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAEtCG,SAAS,CAAC,MAAM;IACZ,eAAeC,SAAS,GAAG;MACvB,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,OAAO,CAAC;MACnCP,OAAO,CAACM,MAAM,CAACP,IAAI,CAAC;IACxB;IACAM,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;;EAER;EACE,MAAMG,YAAY,GAAGT,IAAI,CAACU,MAAM,CAAEC,GAAG,IAAK;IAC1C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IACjC,MAAME,SAAS,GAAG,IAAID,IAAI,CAACV,KAAK,CAAC;;IAEjC;IACA,OAAOS,IAAI,CAACG,YAAY,EAAE,KAAKD,SAAS,CAACC,YAAY,EAAE,IAAIH,IAAI,CAACI,kBAAkB,EAAE,CAACC,QAAQ,CAACd,KAAK,CAAC;EACtG,CAAC,CAAC;EAGA,oBAEI;IAAA,wBAEI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAA,wBACA;QAAA,uBACI;UAAA,wBACI;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eACxB;YAAA,UAAI;UAAc;YAAA;YAAA;YAAA;UAAA,QAAK,eACvB;YAAA,UAAI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACKM,YAAY,CAACS,GAAG,CAAEP,GAAG,iBAClB;UAAA,wBACI;YAAA,UAAKA,GAAG,CAACQ;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eACjB;YAAA,UAAKR,GAAG,CAACS;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM,eACnB;YAAA,UAAKT,GAAG,CAACU;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACpB;YAAA,UAAKV,GAAG,CAACC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAJdD,GAAG,CAACQ,EAAE;UAAA;UAAA;UAAA;QAAA,QAMlB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEd;AAAC,GApDQpB,KAAK;AAAA,KAALA,KAAK;AAsDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}