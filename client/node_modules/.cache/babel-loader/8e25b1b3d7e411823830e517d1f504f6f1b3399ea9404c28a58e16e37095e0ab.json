{"ast":null,"code":"var _jsxFileName = \"/Users/ameliatrevino/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/login/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // // Make a GET request to your backend API to retrieve all user records\n      // const userRecords = await axios.get(`http://localhost:3001/api/login`);\n\n      // // Loop through the user records to find a matching username and password\n      // let userFound = false;\n      // for (let user of userRecords.data) {\n      //   if (user.username === username && user.password === password) {\n      //     // If a matching username and password is found, set userFound to true and break out of the loop\n      //     userFound = true;\n      //     break;\n      //   }\n      // }\n\n      // // If no matching username and password is found, set an error message\n      // if (!userFound) {\n      //   setErrorMessage('Invalid username or password');\n      //   return;\n      // }\n\n      // // If a matching username and password is found, redirect to the homepage\n      // window.location.href = '/home';\n      const userRecords = await axios.get(`http://localhost:3001/api/login?username=${username}`);\n      if (userRecords.data.length === 0) {\n        // If no user record is found, set an error message\n        setErrorMessage('Invalid username or password');\n        return;\n      }\n\n      // Iterate through the retrieved user records and check if any of the passwords match\n      const foundUser = userRecords.data.find(user => user.password === password);\n      if (foundUser) {\n        // If a matching user is found, redirect to the homepage\n        window.location.href = '/home';\n      } else {\n        // If no matching user is found, set an error message\n        setErrorMessage('Invalid username or password');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !username || !password,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","axios","Login","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","userRecords","get","data","length","foundUser","find","user","window","location","href","err","console","log","target","value"],"sources":["/Users/ameliatrevino/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport \"./login.css\"\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      // // Make a GET request to your backend API to retrieve all user records\n      // const userRecords = await axios.get(`http://localhost:3001/api/login`);\n      \n      // // Loop through the user records to find a matching username and password\n      // let userFound = false;\n      // for (let user of userRecords.data) {\n      //   if (user.username === username && user.password === password) {\n      //     // If a matching username and password is found, set userFound to true and break out of the loop\n      //     userFound = true;\n      //     break;\n      //   }\n      // }\n\n      // // If no matching username and password is found, set an error message\n      // if (!userFound) {\n      //   setErrorMessage('Invalid username or password');\n      //   return;\n      // }\n\n      // // If a matching username and password is found, redirect to the homepage\n      // window.location.href = '/home';\n      const userRecords = await axios.get(`http://localhost:3001/api/login?username=${username}`);\n\nif (userRecords.data.length === 0) {\n  // If no user record is found, set an error message\n  setErrorMessage('Invalid username or password');\n  return;\n}\n\n// Iterate through the retrieved user records and check if any of the passwords match\nconst foundUser = userRecords.data.find(user => user.password === password);\nif (foundUser) {\n  // If a matching user is found, redirect to the homepage\n  window.location.href = '/home';\n} else {\n  // If no matching user is found, set an error message\n  setErrorMessage('Invalid username or password');\n}\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>Login</h1>\n      <form onSubmit={handleLogin} >\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <br />\n        {/* <Link to='/home'>\n           <button type=\"submit\">Login</button>\n        </Link> */}\n           {errorMessage && <p>{errorMessage}</p>}\n        <button type=\"submit\" disabled={!username || !password}>Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAA;AAEpB,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACF;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA,MAAMC,WAAW,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,4CAA2CV,QAAS,EAAC,CAAC;MAEjG,IAAIS,WAAW,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACjC;QACAP,eAAe,CAAC,8BAA8B,CAAC;QAC/C;MACF;;MAEA;MACA,MAAMQ,SAAS,GAAGJ,WAAW,CAACE,IAAI,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACb,QAAQ,KAAKA,QAAQ,CAAC;MAC3E,IAAIW,SAAS,EAAE;QACb;QACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;MAChC,CAAC,MAAM;QACL;QACAb,eAAe,CAAC,8BAA8B,CAAC;MACjD;IACI,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAM,QAAQ,EAAEb,WAAY;MAAA,wBAC1B;QAAA,WAAO,WAEL;UACE,IAAI,EAAC,MAAM;UACX,KAAK,EAAEN,QAAS;UAChB,QAAQ,EAAGO,CAAC,IAAKN,WAAW,CAACM,CAAC,CAACe,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA,WAAO,WAEL;UACE,IAAI,EAAC,UAAU;UACf,KAAK,EAAErB,QAAS;UAChB,QAAQ,EAAGK,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACe,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAC7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA;QAAA;QAAA;MAAA,QAAM,EAIFnB,YAAY,iBAAI;QAAA,UAAIA;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACzC;QAAQ,IAAI,EAAC,QAAQ;QAAC,QAAQ,EAAE,CAACJ,QAAQ,IAAI,CAACE,QAAS;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjE;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAjFIH,KAAK;AAAA,KAALA,KAAK;AAmFX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}