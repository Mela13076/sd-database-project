{"ast":null,"code":"var _jsxFileName = \"/Users/ameliatrevino/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/pages/DatabasePage.js\",\n  _s = $RefreshSig$();\n// import Table from \"../components/Table/table\";\n// import Search from \"../components/search/search\";\n// import { useEffect, useState } from \"react\";\n// import axios from 'axios';\n\n// function DatabasePage(){\n//     const [data, setData] = useState([]);\n//     const [filteredData, setFilteredData] = useState([]);\n\n// useEffect(() => {\n//     // Make an HTTP GET request to the backend server using Axios\n//     axios.get('http://localhost:3001/data')\n//       .then((response) => {\n//         // Set the data state variable with the response data\n//         setData(response.data);\n//         //console.log(data)\n//       })\n//       .catch((error) => {\n//         // Handle any errors that occur during the request\n//         console.error(error);\n//       });\n//   }, []);\n\n//   const handleFilter = (filtered) => {\n//     setFilteredData(filtered);\n//   };\n\n//     return(\n//         <div className=\"databaseBody\">\n//             <div className=\"top-content\">\n//                 {/* <Filter setFilteredData={setFilteredData}/> */}\n//                 <Search data={data} setFilteredData={setFilteredData} handleFilter={handleFilter}/>\n//             </div>\n//             <div className=\"bottom-content\">\n//                 {/* <Table data={filteredData}/> */}\n//                 <Table data={filteredData.length > 0 ? filteredData : data}/>\n//             </div>\n//       </div>\n//     )\n// }\n\n// export default DatabasePage\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/DatabasePage.css\";\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Table from \"../components/Table/table\";\nimport Search from \"../components/search/search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DatabasePage() {\n  _s();\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  useEffect(() => {\n    // Make an HTTP GET request to the backend server using Axios\n    axios.get('http://localhost:3001/data').then(response => {\n      // Set the data state variable with the response data\n      setData(response.data);\n      //console.log(data)\n    }).catch(error => {\n      // Handle any errors that occur during the request\n      console.error(error);\n    });\n  }, []);\n  const handleFilter = filtered => {\n    setFilteredData(filtered);\n  };\n\n  // Format data for Recharts\n  const chartData = data.map(item => {\n    return {\n      time_collected: item.time_collected,\n      pressure_value: item.pressure_value\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"databaseBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        data: data,\n        setFilteredData: setFilteredData,\n        handleFilter: handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-content\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        data: filteredData.length > 0 ? filteredData : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyze\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 800,\n          height: 400,\n          data: chartData,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time_collected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            stroke: \"#000\",\n            strokeDasharray: \"5 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"pressure_value\",\n            stroke: \"rgb(41, 91, 254)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabasePage, \"qVEhtocWIY/7ThNKEvUCk7dwcrg=\");\n_c = DatabasePage;\nexport default DatabasePage;\nvar _c;\n$RefreshReg$(_c, \"DatabasePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Table","Search","DatabasePage","data","setData","filteredData","setFilteredData","get","then","response","catch","error","console","handleFilter","filtered","chartData","map","item","time_collected","pressure_value","length"],"sources":["/Users/ameliatrevino/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/pages/DatabasePage.js"],"sourcesContent":["// import Table from \"../components/Table/table\";\n// import Search from \"../components/search/search\";\n// import { useEffect, useState } from \"react\";\n// import axios from 'axios';\n\n\n// function DatabasePage(){\n//     const [data, setData] = useState([]);\n//     const [filteredData, setFilteredData] = useState([]);\n\n// useEffect(() => {\n//     // Make an HTTP GET request to the backend server using Axios\n//     axios.get('http://localhost:3001/data')\n//       .then((response) => {\n//         // Set the data state variable with the response data\n//         setData(response.data);\n//         //console.log(data)\n//       })\n//       .catch((error) => {\n//         // Handle any errors that occur during the request\n//         console.error(error);\n//       });\n//   }, []);\n\n  \n\n//   const handleFilter = (filtered) => {\n//     setFilteredData(filtered);\n//   };\n  \n//     return(\n//         <div className=\"databaseBody\">\n//             <div className=\"top-content\">\n//                 {/* <Filter setFilteredData={setFilteredData}/> */}\n//                 <Search data={data} setFilteredData={setFilteredData} handleFilter={handleFilter}/>\n//             </div>\n//             <div className=\"bottom-content\">\n//                 {/* <Table data={filteredData}/> */}\n//                 <Table data={filteredData.length > 0 ? filteredData : data}/>\n//             </div>\n//       </div>\n//     )\n// }\n\n// export default DatabasePage\n\n\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/DatabasePage.css\"\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Table from \"../components/Table/table\";\nimport Search from \"../components/search/search\";\n\nfunction DatabasePage() {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n\n  useEffect(() => {\n    // Make an HTTP GET request to the backend server using Axios\n    axios.get('http://localhost:3001/data')\n      .then((response) => {\n        // Set the data state variable with the response data\n        setData(response.data);\n        //console.log(data)\n      })\n      .catch((error) => {\n        // Handle any errors that occur during the request\n        console.error(error);\n      });\n  }, []);\n\n  const handleFilter = (filtered) => {\n    setFilteredData(filtered);\n  };\n\n  // Format data for Recharts\n  const chartData = data.map((item) => {\n    return {\n      time_collected: item.time_collected,\n      pressure_value: item.pressure_value\n    };\n  });\n\n  return (\n    <div className=\"databaseBody\">\n      <div className=\"top-content\">\n        <Search data={data} setFilteredData={setFilteredData} handleFilter={handleFilter}/>\n      </div>\n      <div className=\"bottom-content\">\n        <Table data={filteredData.length > 0 ? filteredData : data}/>\n        <div className=\"analyze\">\n        <LineChart width={800} height={400} data={chartData}>\n          <XAxis dataKey=\"time_collected\" />\n          <YAxis />\n          <CartesianGrid stroke=\"#000\" strokeDasharray=\"5 5\" />\n          <Line type=\"monotone\" dataKey=\"pressure_value\" stroke=\"rgb(41, 91, 254)\" />\n          <Tooltip />\n          <Legend />\n        </LineChart>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DatabasePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}