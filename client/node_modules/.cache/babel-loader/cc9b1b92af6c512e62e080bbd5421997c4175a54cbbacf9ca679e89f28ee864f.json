{"ast":null,"code":"var _jsxFileName = \"/Users/mel/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/Table/table.js\";\nimport './table.css';\nimport Search from '../search/search';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(_ref) {\n  let {\n    data\n  } = _ref;\n  // Helper function to format the date string\n  const formatDate = dateString => {\n    if (!dateString) {\n      return ''; // Return empty string if dateString is null or undefined\n    }\n\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${month}-${day}-${year}`;\n  };\n  const formatTime = timeString => {\n    if (!timeString) {\n      return ''; // Return empty string if timeString is null or undefined\n    }\n\n    const time = new Date(`1970-01-01T${timeString}`);\n    const hours = time.getHours();\n    const minutes = String(time.getMinutes()).padStart(2, '0');\n    const seconds = String(time.getSeconds()).padStart(2, '0');\n    const amOrPm = hours >= 12 ? 'PM' : 'AM';\n    const twelveHourClock = hours % 12 || 12;\n    return `${twelveHourClock}:${minutes}:${seconds} ${amOrPm}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-sec\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"blueTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pressure Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Technician Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Serial Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.length > 0 && data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(row.date_collected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatTime(row.time_collected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [row.pressure_value, \" PSI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.tech_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.job_num\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.serial_num\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, row.pressure_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Search","React","useState","useEffect","axios","Table","data","formatDate","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formatTime","timeString","time","hours","getHours","minutes","getMinutes","seconds","getSeconds","amOrPm","twelveHourClock","length","map","row","date_collected","time_collected","pressure_value","tech_name","job_num","serial_num","notes","pressure_id"],"sources":["/Users/mel/Library/Mobile Documents/com~apple~CloudDocs/Documents/Engineering Things/Programming/sd-database-project/client/src/components/Table/table.js"],"sourcesContent":["import './table.css';\nimport Search from '../search/search';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Table({data}) {\n\n       // Helper function to format the date string\n       const formatDate = (dateString) => {\n        if (!dateString) {\n            return ''; // Return empty string if dateString is null or undefined\n        }\n        const date = new Date(dateString);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${month}-${day}-${year}`;\n    }\n    \n    const formatTime = (timeString) => {\n        if (!timeString) {\n            return ''; // Return empty string if timeString is null or undefined\n        }\n        const time = new Date(`1970-01-01T${timeString}`);\n        const hours = time.getHours();\n        const minutes = String(time.getMinutes()).padStart(2, '0');\n        const seconds = String(time.getSeconds()).padStart(2, '0');\n        const amOrPm = hours >= 12 ? 'PM' : 'AM';\n        const twelveHourClock = hours % 12 || 12;\n        return `${twelveHourClock}:${minutes}:${seconds} ${amOrPm}`;\n    }\n\n    return (\n\n        <div className='table-sec'>\n            <table className='blueTable'>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>Time</th>\n                        <th>Pressure Value</th>\n                        <th>Technician Name</th>\n                        <th>Job Number</th>\n                        <th>Serial Number</th>\n                        <th>Notes</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.length > 0 && data.map((row ) => (\n                        <tr key={row.pressure_id}>\n                            <td>{formatDate(row.date_collected)}</td>\n                            <td>{formatTime(row.time_collected)}</td>\n                            <td>{row.pressure_value} PSI</td>\n                            <td>{row.tech_name}</td>\n                            <td>{row.job_num}</td>\n                            <td>{row.serial_num}</td>\n                            <td>{row.notes}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table;"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,KAAK,OAAS;EAAA,IAAR;IAACC;EAAI,CAAC;EAEd;EACA,MAAMC,UAAU,GAAIC,UAAU,IAAK;IAClC,IAAI,CAACA,UAAU,EAAE;MACb,OAAO,EAAE,CAAC,CAAC;IACf;;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,IAAI,GAAGF,IAAI,CAACG,WAAW,EAAE;IAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACL,IAAI,CAACM,QAAQ,EAAE,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACL,IAAI,CAACS,OAAO,EAAE,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,OAAQ,GAAEH,KAAM,IAAGI,GAAI,IAAGN,IAAK,EAAC;EACpC,CAAC;EAED,MAAMQ,UAAU,GAAIC,UAAU,IAAK;IAC/B,IAAI,CAACA,UAAU,EAAE;MACb,OAAO,EAAE,CAAC,CAAC;IACf;;IACA,MAAMC,IAAI,GAAG,IAAIX,IAAI,CAAE,cAAaU,UAAW,EAAC,CAAC;IACjD,MAAME,KAAK,GAAGD,IAAI,CAACE,QAAQ,EAAE;IAC7B,MAAMC,OAAO,GAAGV,MAAM,CAACO,IAAI,CAACI,UAAU,EAAE,CAAC,CAACT,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,MAAMU,OAAO,GAAGZ,MAAM,CAACO,IAAI,CAACM,UAAU,EAAE,CAAC,CAACX,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,MAAMY,MAAM,GAAGN,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IACxC,MAAMO,eAAe,GAAGP,KAAK,GAAG,EAAE,IAAI,EAAE;IACxC,OAAQ,GAAEO,eAAgB,IAAGL,OAAQ,IAAGE,OAAQ,IAAGE,MAAO,EAAC;EAC/D,CAAC;EAED,oBAEI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAO,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA,uBACI;UAAA,wBACI;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAA,UAAI;UAAc;YAAA;YAAA;YAAA;UAAA,QAAK,eACvB;YAAA,UAAI;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eACxB;YAAA,UAAI;UAAU;YAAA;YAAA;YAAA;UAAA,QAAK,eACnB;YAAA,UAAI;UAAa;YAAA;YAAA;YAAA;UAAA,QAAK,eACtB;YAAA,UAAI;UAAK;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACb;QAAA;QAAA;QAAA;MAAA,QACD,eACR;QAAA,UACKtB,IAAI,CAACwB,MAAM,GAAG,CAAC,IAAIxB,IAAI,CAACyB,GAAG,CAAEC,GAAG,iBAC7B;UAAA,wBACI;YAAA,UAAKzB,UAAU,CAACyB,GAAG,CAACC,cAAc;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM,eACzC;YAAA,UAAKd,UAAU,CAACa,GAAG,CAACE,cAAc;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM,eACzC;YAAA,WAAKF,GAAG,CAACG,cAAc,EAAC,MAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACjC;YAAA,UAAKH,GAAG,CAACI;UAAS;YAAA;YAAA;YAAA;UAAA,QAAM,eACxB;YAAA,UAAKJ,GAAG,CAACK;UAAO;YAAA;YAAA;YAAA;UAAA,QAAM,eACtB;YAAA,UAAKL,GAAG,CAACM;UAAU;YAAA;YAAA;YAAA;UAAA,QAAM,eACzB;YAAA,UAAKN,GAAG,CAACO;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA,GAPfP,GAAG,CAACQ,WAAW;UAAA;UAAA;UAAA;QAAA,QAS3B;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACN;AAEd;AAAC,KA1DQnC,KAAK;AA4Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}